# deoplete
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = [ 'nvim-yarp', 'vim-hug-neovim-rpc' ]
on_event = 'InsertEnter'
hook_post_source = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = ['neomru.vim']
hook_post_source = '''
  let ignore_globs = ['**/node_modules/**', '**/vendor/bundle/**', '**/bower_components/**', '**/tmp/cache/**']
  call unite#custom#source('file_rec,file_rec/async', 'ignore_globs', ignore_globs)"
'''
hook_add = '''
  let g:unite_enable_start_insert=1
  let g:unite_source_history_yank_enable =1
  let g:unite_source_file_mru_limit = 200
  nnoremap <silent> ,uy :<C-u>Unite history/yank<CR>
  nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
  nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
  nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
  nnoremap <silent> ,uu :<C-u>Unite file_mru buffer<CR>
  nnoremap <silent> <space><space> :<C-u>Unite file_mru buffer<CR>
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'
on_event = 'InsertEnter'

# TableModeToggle
# | a | ab |
# ||
[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_event = 'InsertEnter'
hook_add = '''
  let g:table_mode_corner='|'
'''

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_event = 'InsertEnter'

# [[plugins]]
# repo = 'Shougo/neocomplete'
# if = 'has("lua")'
# on_event = 'InsertEnter'
# hook_add = '''
#   let g:neocomplete#enable_at_startup = 1
# '''

# 選択後 S[*] -> *で囲う
[[plugins]]
repo = 'tpope/vim-surround'
on_event = 'InsertEnter'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_event = 'InsertEnter'
on_ft = ['snippet']
depends = ['neosnippet-snippets']

# [+|-]
[[plugins]]
repo = 'thinca/vim-fontzoom'
on_cmd = ['Fontzoom']
on_map = ['<Plug>(fontzoom-']
gui = 1

# jsdoc conrtol + L
[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'typescript', 'jsx', 'vue', 'vuejs']
build = 'make install'
hook_add = '''
  let g:jsdoc_allow_input_prompt=1
  let g:jsdoc_input_description=1
  let g:jsdoc_allow_shorthand=1
  let g:jsdoc_enable_es6=1
  nmap <silent> <C-l> <Plug>(jsdoc)
'''

# emmet html:5 <c-y>, -> <c-y>
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'typescriptreact', 'javascriptreact']
hook_add = '''
  let g:user_emmet_expandabbr_key='<c-y>'
  let g:user_emmet_settings={
  \    'variables': {
  \      'lang': 'ja'
  \    },
  \   'indentation': '  '
  \ }
'''

# svelte
[[plugins]]
repo = 'evanleck/vim-svelte'
on_ft = ['svelte']
hook_add = '''
let g:svelte_preprocessor_tags = [
  \ { 'name': 'pug', 'tag': 'template', 'as': 'pug' },
  \ { 'name': 'stylus', 'tag': 'style', 'as': 'stylus' }
  \ ]
" You still need to enable these preprocessors as well.
let g:svelte_preprocessors = ['pug', 'stylus']
'''

# pug complete
[[plugins]]
repo = 'dNitro/vim-pug-complete'
on_ft = ['pug', 'jade']

# html tag close
[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'htm', 'xhtml', 'phtml', 'erb', 'php', 'vue', 'jsx', 'tsx', 'svelte']
hook_add = '''
  let g:closetag_filenames = '*.html,*.htm,*.xhtml,*.phtml,*.erb,*.php,*.vue,*.jsx,*.tsx,*.svelte'
'''

# markdown preview PreVimOpen
[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown', 'txt']
hook_add = '''
  let g:previm_open_cmd = 'open -a Google\ Chrome'
'''

# typescript
[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = ['ts', 'tsx', 'typescript', 'typescriptreact']

# color preview *slow
# [[plugins]]
# repo = 'marslo/vim-coloresque'

#---------
# @nvim has('nvim')
#---
# preview source color
[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
if = '''has('nvim')'''
on_event = 'BufEnter'
hook_source = '''
lua << EOF
  require('colorizer').setup()
EOF
'''
