[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
on_i = 1

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_i = 1

[[plugins]]
repo = 'Shougo/neocomplete'
if = 'has("lua")'
on_i = 1
hook_add = '''
  let g:neocomplete#enable_at_startup = 1
'''

# 選択後 S[*] -> *で囲う
[[plugins]]
repo = 'tpope/vim-surround'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Shougo/unite.vim'
depends = ['neomru.vim']
hook_post_source = '''
  let ignore_globs = ['**/node_modules/**', '**/vendor/bundle/**', '**/bower_components/**', '**/tmp/cache/**']
  call unite#custom#source('file_rec,file_rec/async', 'ignore_globs', ignore_globs)"
'''
hook_add = '''
  let g:unite_enable_start_insert=1
  let g:unite_source_history_yank_enable =1
  let g:unite_source_file_mru_limit = 200
  nnoremap <silent> ,uy :<C-u>Unite history/yank<CR>
  nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
  nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
  nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
  nnoremap <silent> ,uu :<C-u>Unite file_mru buffer<CR>
  nnoremap <silent> <space><space> :<C-u>Unite file_mru buffer<CR>
'''

# [+|-]
[[plugins]]
repo = 'thinca/vim-fontzoom'
on_cmd = ['Fontzoom']
on_map = ['<Plug>(fontzoom-']
gui = 1

# markdown syntax
[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['md']

# pug syntax
[[plugins]]
repo = 'digitaltoad/vim-pug'
on_ft = ['pug', 'jade']

# html5 syntax
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

# stylus syntax
[[plugins]]
repo = 'wavded/vim-stylus'
on_ft = ['stylus']

# scss color syntax
[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = ['sass']

# css syntax
[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css', 'stylus', 'sass', 'less', 'scss']

# css color syntax
[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css', 'stylus', 'sass', 'less', 'scss']

# json syntax
[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']

# toml syntax
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# vue syntax
[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue', 'vuejs']
hook_add = '''
  let g:vue_disable_pre_processors=1
  let g:vue_pre_processors='detect_on_enter'
  autocmd FileType *.vuejs set filetype=vue
  autocmd FileType vue syntax sync fromstart
  autocmd BufRead,BufNewFile *.vue setlocal filetype=vue

'''

# javascript syntax
[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = ['javascript']
hook_add = '''
  let g:javascript_plugin_jsdoc=1
'''

# es6 syntax
[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript']

# stg-0 syntax
[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript']

# jsx syntax
[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['jsx']

#typescript syntax
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']
hook_add = '''
  let g:typescript_indent_disable = 1
'''

# typescript template syntax
[[plugins]]
repo = 'Quramy/vim-js-pretty-template'
on_ft = ['typescript']

# typescript d.ts
[[plugins]]
repo = 'Quramy/vim-dtsm'
on_ft = ['typescript']

# typescript typings
[[plugins]]
repo = 'mhartington/vim-typings'
on_ft = ['typescript']

# typescript complement
[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = ['typescript']

# php syntax
[[plugins]]
repo = 'StanAngeloff/php.vim'
on_ft = ['php']

[[plugins]]
repo = 'm2mdas/phpcomplete-extended'
on_ft = ['php']

# go syntax
[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

# ruby syntax
[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['rb']

# ruby end
[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = ['rb']

# python syntax
[[plugins]]
repo = 'hdima/python-syntax'
on_ft = ['py']
hook_add = '''
  let python_highlight_all = 1
'''

# jsdoc conrtol + L
[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['javascript', 'typescript', 'jsx', 'vue', 'vuejs']
hook_add = '''
  let g:jsdoc_allow_input_prompt=1
  let g:jsdoc_input_description=1
  let g:jsdoc_allow_shorthand=1
  let g:jsdoc_enable_es6=1
  nmap <silent> <C-l> <Plug>(jsdoc)
'''

# emmet html:5 <c-y>,
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html']
hook_add = '''
  let g:user_emmet_settings={
  \    'variables': {
  \      'lang': 'ja'
  \    },
  \   'indentation': '  '
  \ }
'''
